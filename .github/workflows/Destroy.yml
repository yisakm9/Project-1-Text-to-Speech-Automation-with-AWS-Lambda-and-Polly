# Name of the GitHub Actions workflow for destroying the environment.
name: 'Destroy Dev Environment'

# This workflow is triggered manually from the GitHub Actions UI.
on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'MANDATORY: To prevent accidental destruction, type the word "destroy" to confirm.'
        required: true
        default: 'do-not-destroy'

# --- Security Best Practice ---
# Set default permissions for the GITHUB_TOKEN.
permissions:
  contents: read

jobs:
  # This workflow contains a single job to destroy the infrastructure.
  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest

    # These environment variables are available to all steps in this job.
    env:
      AWS_REGION: 'us-east-1'
      TF_WORKING_DIR: 'environments/dev'
      CONFIRMATION_PHRASE: "destroy"

    # --- OIDC Permissions ---
    permissions:
      id-token: write
      contents: read

    steps:
      # 1. Checkout Repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::456202167790:role/githubaction #  IAM ROLE ARN
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-Terraform-Destroy

      # 3. Setup Python <-- ADDED STEP
      # Required to create the zip file for the source_code_hash calculation.
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      # 4. Package Lambda Function <-- ADDED STEP
      # Creates the lambda_function.zip artifact so Terraform can read it.
      - name: Create Lambda Deployment Package
        run: |
          cd src/lambda_function
          zip -r ../../lambda_function.zip .

      # 5. Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1 # Use a specific version for consistency.

      # 6. Terraform Init
      - name: Terraform Init
        run: terraform -chdir="${{ env.TF_WORKING_DIR }}" init

      # 7. Safety Check
      - name: Verify Destroy Confirmation
        id: safety_check
        run: |
          if [ "${{ github.event.inputs.confirmation }}" == "${{ env.CONFIRMATION_PHRASE }}" ]; then
            echo "✅ Confirmation phrase matches. Proceeding with destroy operation."
          else
            echo "❌ ERROR: Confirmation phrase does not match."
            echo "Aborting workflow."
            exit 1
          fi

      # 8. Terraform Destroy
      - name: Terraform Destroy
        id: destroy
        run: terraform -chdir="${{ env.TF_WORKING_DIR }}" destroy -auto-approve